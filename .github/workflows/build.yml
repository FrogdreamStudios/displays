name: build-and-publish

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - uses: gradle/actions/wrapper-validation@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'microsoft'

      - run: chmod +x ./gradlew

      - run: ./gradlew build

      - name: Upload raw jars
        uses: actions/upload-artifact@v4
        with:
          name: raw-jars
          path: build/libs/*.jar
          if-no-files-found: error
          
  publish:
    needs: build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        side:   [client, server]
        loader: [fabric, forge, paper]
        version: [1_21_8]
    steps:
      - name: Download raw jars from build
        uses: actions/download-artifact@v4
        with:
          name: raw-jars
          path: temp-jars

      - name: Upload filtered jar
        uses: actions/upload-artifact@v4
        with:
          name: DreamDisplays ${{ matrix.loader }} ${{ matrix.side }} ${{ matrix.version }}
          path: temp-jars/displays-${{ matrix.side }}-${{ matrix.version }}-*-${{ matrix.loader }}.jar
          if-no-files-found: ignore

  cleanup-raw:
    needs: publish
    runs-on: ubuntu-24.04
    if: always()
    steps:
      - name: Delete raw-jars artifact
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const resp = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo:  context.repo.repo
            });
            const raw = resp.data.artifacts.find(a => a.name === 'raw-jars');
            if (!raw) {
              core.info('raw-jars not found. Ignoring...');
            } else {
              await github.rest.actions.deleteArtifact({
                owner:      context.repo.owner,
                repo:       context.repo.repo,
                artifact_id: raw.id
              });
              core.info(`raw-jars deleted (id=${raw.id})`);
            }
