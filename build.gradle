plugins {
	id 'fabric-loom' version '1.10.1'
	id 'maven-publish'
	//id "org.jetbrains.kotlin.jvm" version "2.0.0"
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}


repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
//	maven {
//		url "https://nexus.inotsleep.com/repository/maven-public/"
//		credentials {
//			username = "INotSleep"
//			password = System.getenv("NEXUS_PASSWORD")
//		}
//	}
	maven {
		url "https://repo.l0sty.ru/releases"
	}

	maven { url 'https://jitpack.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings loom.officialMojangMappings()
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	//modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	implementation 'org.freedesktop.gstreamer:gst1-java-core:1.4.0'
	compileOnly 'net.java.dev.jna:jna:5.9.0'
	compileOnly 'net.java.dev.jna:jna-platform:5.9.0'
	implementation 'me.inotsleep:utils:1.1.2'

	implementation 'com.github.felipeucelli:javatube:6692a32'

	compileOnly("org.lwjgl:lwjgl:3.3.6")
}

shadowJar {
	// По умолчанию используется runtimeClasspath, но можно фильтровать зависимости:
	dependencies {
		include(dependency('org.freedesktop.gstreamer:gst1-java-core'))
		exclude(dependency('net.java.dev.jna:jna'))
		exclude(dependency('net.java.dev.jna:jna-platform'))
		include(dependency('com.github.felipeucelli:javatube'))
		include(dependency('org.json:json'))
		include(dependency('me.inotsleep:utils'))
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	filesMatching("version") {
		expand "version": project.version
	}
}

compileJava {
	options.encoding = 'UTF-8'
}

//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
//	kotlinOptions {
//		jvmTarget = 21
//	}
//}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

jar {

	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

remapJar {
	dependsOn shadowJar
	input.set(shadowJar.archiveFile)
}
